
package perpustakaan;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;




public class perpustakaan extends javax.swing.JFrame {

  private Connection con;
    private Statement stat;
    private ResultSet res;
    private DBConnection dbConnection;
    


    public perpustakaan() {
        initComponents();
        dbConnection = new DBConnection();
        koneksi();
        tabel();
        kosongkan();
        ClearTabel();
    }

    //membuat koneksi kedatabase
    private void koneksi() {
        con = dbConnection.getConnection();
        try {
            stat = con.createStatement();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void tabel() {
        DefaultTableModel tb = new DefaultTableModel();
    tb.addColumn("No.Buku");
    tb.addColumn("Judul Buku");
    tb.addColumn("Pengarang");
    tb.addColumn("Tahun");
    tb.addColumn("Penerbit");
    tb.addColumn("Quantity");
    tabel.setModel(tb);
    try {
        res = stat.executeQuery("select * from buku");

        while (res.next()) {
            tb.addRow(new Object[]{
                res.getInt("no_buku"),
                res.getString("judul_buku"),
                res.getString("pengarang"),
                res.getInt("tahun"),
                res.getString("penerbit"),
                res.getInt("quantity")
            });
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
        }
    }

    private void kosongkan() {
        no.setText("");
        judul.setText("");
        pengarang.setText("");
        tahun.setText("");
        penerbit.setText("");
        no.requestFocus();
    }

    private void ClearTabel() {
        int cb = tabel.getRowCount();
        int cc = tabel.getColumnCount();
        for (int i = 0; i < cb; i++) {
            for (int j = 0; j < cc; j++) {
                tabel.setValueAt(null, i, j);
            }
        }
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        no = new javax.swing.JTextField();
        judul = new javax.swing.JTextField();
        pengarang = new javax.swing.JTextField();
        tahun = new javax.swing.JTextField();
        penerbit = new javax.swing.JTextField();
        simpan = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        baca_tabel = new javax.swing.JButton();
        clear_tabel = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        btnCetak = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Perpustakaan");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("No. Buku");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 95, -1, -1));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Judul");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 143, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Pengarang");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 194, -1, -1));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Tahun");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 245, -1, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Quantity");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 290, -1, 20));

        no.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        no.setForeground(new java.awt.Color(102, 102, 102));
        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });
        getContentPane().add(no, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 93, 70, -1));

        judul.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        judul.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 140, 164, -1));

        pengarang.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        pengarang.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(pengarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 191, 164, -1));

        tahun.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tahun.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(tahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 70, -1));

        penerbit.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        penerbit.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(penerbit, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 293, 164, -1));

        simpan.setForeground(new java.awt.Color(51, 51, 51));
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 113, 91, -1));

        edit.setForeground(new java.awt.Color(51, 51, 51));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 156, 91, -1));

        baca_tabel.setForeground(new java.awt.Color(51, 51, 51));
        baca_tabel.setText("Baca Tabel");
        baca_tabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baca_tabelActionPerformed(evt);
            }
        });
        getContentPane().add(baca_tabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 90, -1));

        clear_tabel.setForeground(new java.awt.Color(51, 51, 51));
        clear_tabel.setText("Clear Tabel");
        clear_tabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_tabelActionPerformed(evt);
            }
        });
        getContentPane().add(clear_tabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 113, -1, -1));

        hapus.setForeground(new java.awt.Color(51, 51, 51));
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 156, 91, -1));

        keluar.setForeground(new java.awt.Color(51, 51, 51));
        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });
        getContentPane().add(keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 199, 91, -1));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 480, 170));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, -1));
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 100, -1));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Penerbit");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 296, -1, -1));

        quantity.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        quantity.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 70, -1));

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        getContentPane().add(btnCetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 90, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("KELOLA DATA BUKU");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 550));

        setSize(new java.awt.Dimension(549, 556));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
 try {
        stat.executeUpdate("insert into buku values ("
                + "'" + no.getText() + "',"
                + "'" + judul.getText() + "',"
                + "'" + pengarang.getText() + "',"
                + "'" + tahun.getText() + "',"
                + "'" + penerbit.getText() + "',"
                + "'10')" // Default quantity 10, bisa diubah sesuai kebutuhan
        );

        kosongkan();
        tabel();
        JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan...");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Keterangan Error : " + e);
    
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
try {
        String query = "UPDATE buku SET judul_buku=?, pengarang=?, tahun=?, penerbit=?, quantity=? WHERE no_buku=?";
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, judul.getText());
        pst.setString(2, pengarang.getText());
        pst.setInt(3, Integer.parseInt(tahun.getText()));
        pst.setString(4, penerbit.getText());
        pst.setInt(5, Integer.parseInt(quantity.getText())); // Update quantity
        pst.setString(6, no.getText());
        
        pst.executeUpdate();

        kosongkan();
        tabel();
        JOptionPane.showMessageDialog(rootPane, "Data berhasil Diupdate");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Error saat edit data: " + e.getMessage());
        e.printStackTrace();
    
        }
    }//GEN-LAST:event_editActionPerformed

    private void baca_tabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baca_tabelActionPerformed
        tabel();
    }//GEN-LAST:event_baca_tabelActionPerformed

    private void clear_tabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_tabelActionPerformed
        ClearTabel();
    }//GEN-LAST:event_clear_tabelActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
         int selectedRow = tabel.getSelectedRow();
    if (selectedRow != -1) {
        // Ambil nilai dari baris yang dipilih
        String noBuku = tabel.getValueAt(selectedRow, 0).toString();
        
        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Siapkan koneksi
                Connection con = dbConnection.getConnection();
                if (con != null) {
                    // Query untuk menghapus data
                    String sql = "DELETE FROM buku WHERE no_buku = ?";
                    PreparedStatement pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, noBuku);

                    // Eksekusi query
                    int rowsDeleted = pstmt.executeUpdate();
                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Data buku berhasil dihapus.");
                        kosongkan(); // Kosongkan input fields
                        tabel(); // Refresh tabel
                    } else {
                        JOptionPane.showMessageDialog(this, "Gagal menghapus data buku.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Koneksi ke database gagal.");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus dari tabel.");
    }
    }//GEN-LAST:event_hapusActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
         try {
            res = stat.executeQuery("select * from buku where " + "no_buku='" + no.getText() + "'"
            );

            while (res.next()) {
                judul.setText(res.getString("judul_buku"));
                pengarang.setText(res.getString("pengarang"));
                tahun.setText(res.getString("tahun"));
                penerbit.setText(res.getString("penerbit"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_noActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
     int keluar;
      keluar = JOptionPane.showOptionDialog(this,
              "keluar dari Data Buku",
              "Exit",
              JOptionPane.YES_NO_OPTION,
              JOptionPane.QUESTION_MESSAGE,null,null,null);
      if(keluar==JOptionPane.YES_NO_OPTION){
        new Formutama().show();
        this.dispose();
    }   
    }//GEN-LAST:event_keluarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
 try {
        // Path file .jrxml yang sesuai
        String sourceFileName = "C:\\Users\\ADITYA\\Documents\\NetBeansProjects\\perpustakaan\\src\\perpustakaan\\reporthbuku.jrxml";
        
        // Kompilasi file .jrxml menjadi .jasper
        JasperDesign jasperDesign = JRXmlLoader.load(sourceFileName);
        JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
        
        // Isi laporan dengan data dari database
        Map<String, Object> parameters = new HashMap<>();
        JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);
        
        // Tampilkan laporan
        JasperViewer.viewReport(jasperPrint, false);
    } catch (JRException e) {
        JOptionPane.showMessageDialog(null, "Error saat mencetak laporan: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
    int row = tabel.getSelectedRow();
    if (row != -1) {
        no.setText(tabel.getValueAt(row, 0).toString());
        judul.setText(tabel.getValueAt(row, 1).toString());
        pengarang.setText(tabel.getValueAt(row, 2).toString());
        tahun.setText(tabel.getValueAt(row, 3).toString());
        penerbit.setText(tabel.getValueAt(row, 4).toString());
        quantity.setText(tabel.getValueAt(row, 5).toString()); // Pastikan Anda memiliki field untuk quantity
    }
    }//GEN-LAST:event_tabelMouseClicked

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
         try {
            // Cek apakah file report tersedia
            InputStream reportStream = getClass().getResourceAsStream("/perpustakaan/reporthbuku.jrxml");
            
            if (reportStream == null) {
                JOptionPane.showMessageDialog(null, "Report file not found.");
                return; // Keluar dari metode jika file tidak ditemukan
            } else {
                JOptionPane.showMessageDialog(null, "Report file found.");
            }

            // Jika file ditemukan, lanjutkan dengan memuat laporan
            JasperReport jasperReport = JasperCompileManager.compileReport(reportStream);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null);
            JasperViewer.viewReport(jasperPrint, false);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error generating report: " + e.getMessage());
        }
    
    
    
    }//GEN-LAST:event_btnCetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new perpustakaan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baca_tabel;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton clear_tabel;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField judul;
    private javax.swing.JButton keluar;
    private javax.swing.JTextField no;
    private javax.swing.JTextField penerbit;
    private javax.swing.JTextField pengarang;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tahun;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
